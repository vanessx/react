{"ast":null,"code":"var _jsxFileName = \"/home/yaya/Documents/react/atomic-blog/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { createContext, useEffect, useState } from 'react';\nimport { faker } from '@faker-js/faker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction createRandomPost() {\n  return {\n    title: `${faker.hacker.adjective()} ${faker.hacker.noun()}`,\n    body: faker.hacker.phrase()\n  };\n}\n\n// 1) create a context\nconst PostContext = /*#__PURE__*/createContext();\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState(() => Array.from({\n    length: 30\n  }, () => createRandomPost()));\n  const [searchQuery, setSearchQuery] = useState('');\n  const [isFakeDark, setIsFakeDark] = useState(false);\n\n  // Derived state. These are the posts that will actually be displayed\n  const searchedPosts = searchQuery.length > 0 ? posts.filter(post => `${post.title} ${post.body}`.toLowerCase().includes(searchQuery.toLowerCase())) : posts;\n  function handleAddPost(post) {\n    setPosts(posts => [post, ...posts]);\n  }\n  function handleClearPosts() {\n    setPosts([]);\n  }\n\n  // Whenever `isFakeDark` changes, we toggle the `fake-dark-mode` class on the HTML element (see in \"Elements\" dev tool).\n  useEffect(function () {\n    document.documentElement.classList.toggle('fake-dark-mode');\n  }, [isFakeDark]);\n  return (\n    /*#__PURE__*/\n    // 2) provide a value to child components\n    _jsxDEV(PostContext.Provider, {\n      value: {\n        posts: searchedPosts,\n        onClearPosts: handleClearPosts\n      },\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsFakeDark(isFakeDark => !isFakeDark),\n          className: \"btn-fake-dark-mode\",\n          children: isFakeDark ? '☀️' : '🌙'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Header, {\n          posts: searchedPosts,\n          onClearPosts: handleClearPosts,\n          searchQuery: searchQuery,\n          setSearchQuery: setSearchQuery\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          posts: searchedPosts,\n          onAddPost: handleAddPost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Archive, {\n          onAddPost: handleAddPost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 3\n    }, this)\n  );\n}\n_s(App, \"ZdG9CO2kGf3xvTyifRsA8rr+uDs=\");\n_c = App;\nfunction Header(_ref) {\n  let {\n    posts,\n    onClearPosts,\n    searchQuery,\n    setSearchQuery\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u269B\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this), \"The Atomic Blog\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Results, {\n        posts: posts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(SearchPosts, {\n        searchQuery: searchQuery,\n        setSearchQuery: setSearchQuery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClearPosts,\n        children: \"Clear posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 3\n  }, this);\n}\n_c2 = Header;\nfunction SearchPosts(_ref2) {\n  let {\n    searchQuery,\n    setSearchQuery\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    value: searchQuery,\n    onChange: e => setSearchQuery(e.target.value),\n    placeholder: \"Search posts...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 3\n  }, this);\n}\n_c3 = SearchPosts;\nfunction Results(_ref3) {\n  let {\n    posts\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"\\uD83D\\uDE80 \", posts.length, \" atomic posts found\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n}\n_c4 = Results;\nfunction Main(_ref4) {\n  let {\n    posts,\n    onAddPost\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(FormAddPost, {\n      onAddPost: onAddPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Posts, {\n      posts: posts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 3\n  }, this);\n}\n_c5 = Main;\nfunction Posts(_ref5) {\n  let {\n    posts\n  } = _ref5;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(List, {\n      posts: posts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 3\n  }, this);\n}\n_c6 = Posts;\nfunction FormAddPost(_ref6) {\n  _s2();\n  let {\n    onAddPost\n  } = _ref6;\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const handleSubmit = function (e) {\n    e.preventDefault();\n    if (!body || !title) return;\n    onAddPost({\n      title,\n      body\n    });\n    setTitle('');\n    setBody('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: title,\n      onChange: e => setTitle(e.target.value),\n      placeholder: \"Post title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: body,\n      onChange: e => setBody(e.target.value),\n      placeholder: \"Post body\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 3\n  }, this);\n}\n_s2(FormAddPost, \"qwG1af4LOHAgcSQ+L8KuMt9FIzc=\");\n_c7 = FormAddPost;\nfunction List(_ref7) {\n  let {\n    posts\n  } = _ref7;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: posts.map((post, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 6\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 3\n  }, this);\n}\n_c8 = List;\nfunction Archive(_ref8) {\n  _s3();\n  let {\n    onAddPost\n  } = _ref8;\n  // Here we don't need the setter function. We're only using state to store these posts because the callback function passed into useState (which generates the posts) is only called once, on the initial render. So we use this trick as an optimization technique, because if we just used a regular variable, these posts would be re-created on every render. We could also move the posts outside the components, but I wanted to show you this trick 😉\n  const [posts] = useState(() =>\n  // 💥 WARNING: This might make your computer slow! Try a smaller `length` first\n  Array.from({\n    length: 10000\n  }, () => createRandomPost()));\n  const [showArchive, setShowArchive] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Post archive\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowArchive(s => !s),\n      children: showArchive ? 'Hide archive posts' : 'Show archive posts'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 4\n    }, this), showArchive && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: posts.map((post, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [post.title, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 9\n          }, this), \" \", post.body]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onAddPost(post),\n          children: \"Add as new post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 8\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 3\n  }, this);\n}\n_s3(Archive, \"Dx/Bb7s2q9tk4kGgp/d9nuWSLEw=\");\n_c9 = Archive;\nfunction Footer() {\n  return /*#__PURE__*/_jsxDEV(\"footer\", {\n    children: \"\\xA9 by The Atomic Blog \\u270C\\uFE0F\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 9\n  }, this);\n}\n_c10 = Footer;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"SearchPosts\");\n$RefreshReg$(_c4, \"Results\");\n$RefreshReg$(_c5, \"Main\");\n$RefreshReg$(_c6, \"Posts\");\n$RefreshReg$(_c7, \"FormAddPost\");\n$RefreshReg$(_c8, \"List\");\n$RefreshReg$(_c9, \"Archive\");\n$RefreshReg$(_c10, \"Footer\");","map":{"version":3,"names":["createContext","useEffect","useState","faker","jsxDEV","_jsxDEV","createRandomPost","title","hacker","adjective","noun","body","phrase","PostContext","App","_s","posts","setPosts","Array","from","length","searchQuery","setSearchQuery","isFakeDark","setIsFakeDark","searchedPosts","filter","post","toLowerCase","includes","handleAddPost","handleClearPosts","document","documentElement","classList","toggle","Provider","value","onClearPosts","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","Header","Main","onAddPost","Archive","Footer","_c","_ref","Results","SearchPosts","_c2","_ref2","onChange","e","target","placeholder","_c3","_ref3","_c4","_ref4","FormAddPost","Posts","_c5","_ref5","List","_c6","_ref6","_s2","setTitle","setBody","handleSubmit","preventDefault","onSubmit","_c7","_ref7","map","i","_c8","_ref8","_s3","showArchive","setShowArchive","s","_c9","_c10","$RefreshReg$"],"sources":["/home/yaya/Documents/react/atomic-blog/src/App.js"],"sourcesContent":["import { createContext, useEffect, useState } from 'react';\nimport { faker } from '@faker-js/faker';\n\nfunction createRandomPost() {\n\treturn {\n\t\ttitle: `${faker.hacker.adjective()} ${faker.hacker.noun()}`,\n\t\tbody: faker.hacker.phrase(),\n\t};\n}\n\n// 1) create a context\nconst PostContext = createContext();\n\nfunction App() {\n\tconst [posts, setPosts] = useState(() =>\n\t\tArray.from({ length: 30 }, () => createRandomPost())\n\t);\n\tconst [searchQuery, setSearchQuery] = useState('');\n\tconst [isFakeDark, setIsFakeDark] = useState(false);\n\n\t// Derived state. These are the posts that will actually be displayed\n\tconst searchedPosts =\n\t\tsearchQuery.length > 0\n\t\t\t? posts.filter((post) =>\n\t\t\t\t\t`${post.title} ${post.body}`\n\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t.includes(searchQuery.toLowerCase())\n\t\t\t  )\n\t\t\t: posts;\n\n\tfunction handleAddPost(post) {\n\t\tsetPosts((posts) => [post, ...posts]);\n\t}\n\n\tfunction handleClearPosts() {\n\t\tsetPosts([]);\n\t}\n\n\t// Whenever `isFakeDark` changes, we toggle the `fake-dark-mode` class on the HTML element (see in \"Elements\" dev tool).\n\tuseEffect(\n\t\tfunction () {\n\t\t\tdocument.documentElement.classList.toggle('fake-dark-mode');\n\t\t},\n\t\t[isFakeDark]\n\t);\n\n\treturn (\n    // 2) provide a value to child components\n\t\t<PostContext.Provider value={{\n      posts: searchedPosts,\n      onClearPosts: handleClearPosts,\n    }}>\n\t\t\t<section>\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => setIsFakeDark((isFakeDark) => !isFakeDark)}\n\t\t\t\t\tclassName=\"btn-fake-dark-mode\"\n\t\t\t\t>\n\t\t\t\t\t{isFakeDark ? '☀️' : '🌙'}\n\t\t\t\t</button>\n\n\t\t\t\t<Header\n\t\t\t\t\tposts={searchedPosts}\n\t\t\t\t\tonClearPosts={handleClearPosts}\n\t\t\t\t\tsearchQuery={searchQuery}\n\t\t\t\t\tsetSearchQuery={setSearchQuery}\n\t\t\t\t/>\n\t\t\t\t<Main posts={searchedPosts} onAddPost={handleAddPost} />\n\t\t\t\t<Archive onAddPost={handleAddPost} />\n\t\t\t\t<Footer />\n\t\t\t</section>\n\t\t</PostContext.Provider>\n\t);\n}\n\nfunction Header({ posts, onClearPosts, searchQuery, setSearchQuery }) {\n\treturn (\n\t\t<header>\n\t\t\t<h1>\n\t\t\t\t<span>⚛️</span>The Atomic Blog\n\t\t\t</h1>\n\t\t\t<div>\n\t\t\t\t<Results posts={posts} />\n\t\t\t\t<SearchPosts\n\t\t\t\t\tsearchQuery={searchQuery}\n\t\t\t\t\tsetSearchQuery={setSearchQuery}\n\t\t\t\t/>\n\t\t\t\t<button onClick={onClearPosts}>Clear posts</button>\n\t\t\t</div>\n\t\t</header>\n\t);\n}\n\nfunction SearchPosts({ searchQuery, setSearchQuery }) {\n\treturn (\n\t\t<input\n\t\t\tvalue={searchQuery}\n\t\t\tonChange={(e) => setSearchQuery(e.target.value)}\n\t\t\tplaceholder=\"Search posts...\"\n\t\t/>\n\t);\n}\n\nfunction Results({ posts }) {\n\treturn <p>🚀 {posts.length} atomic posts found</p>;\n}\n\nfunction Main({ posts, onAddPost }) {\n\treturn (\n\t\t<main>\n\t\t\t<FormAddPost onAddPost={onAddPost} />\n\t\t\t<Posts posts={posts} />\n\t\t</main>\n\t);\n}\n\nfunction Posts({ posts }) {\n\treturn (\n\t\t<section>\n\t\t\t<List posts={posts} />\n\t\t</section>\n\t);\n}\n\nfunction FormAddPost({ onAddPost }) {\n\tconst [title, setTitle] = useState('');\n\tconst [body, setBody] = useState('');\n\n\tconst handleSubmit = function (e) {\n\t\te.preventDefault();\n\t\tif (!body || !title) return;\n\t\tonAddPost({ title, body });\n\t\tsetTitle('');\n\t\tsetBody('');\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<input\n\t\t\t\tvalue={title}\n\t\t\t\tonChange={(e) => setTitle(e.target.value)}\n\t\t\t\tplaceholder=\"Post title\"\n\t\t\t/>\n\t\t\t<textarea\n\t\t\t\tvalue={body}\n\t\t\t\tonChange={(e) => setBody(e.target.value)}\n\t\t\t\tplaceholder=\"Post body\"\n\t\t\t/>\n\t\t\t<button>Add post</button>\n\t\t</form>\n\t);\n}\n\nfunction List({ posts }) {\n\treturn (\n\t\t<ul>\n\t\t\t{posts.map((post, i) => (\n\t\t\t\t<li key={i}>\n\t\t\t\t\t<h3>{post.title}</h3>\n\t\t\t\t\t<p>{post.body}</p>\n\t\t\t\t</li>\n\t\t\t))}\n\t\t</ul>\n\t);\n}\n\nfunction Archive({ onAddPost }) {\n\t// Here we don't need the setter function. We're only using state to store these posts because the callback function passed into useState (which generates the posts) is only called once, on the initial render. So we use this trick as an optimization technique, because if we just used a regular variable, these posts would be re-created on every render. We could also move the posts outside the components, but I wanted to show you this trick 😉\n\tconst [posts] = useState(() =>\n\t\t// 💥 WARNING: This might make your computer slow! Try a smaller `length` first\n\t\tArray.from({ length: 10000 }, () => createRandomPost())\n\t);\n\n\tconst [showArchive, setShowArchive] = useState(false);\n\n\treturn (\n\t\t<aside>\n\t\t\t<h2>Post archive</h2>\n\t\t\t<button onClick={() => setShowArchive((s) => !s)}>\n\t\t\t\t{showArchive ? 'Hide archive posts' : 'Show archive posts'}\n\t\t\t</button>\n\n\t\t\t{showArchive && (\n\t\t\t\t<ul>\n\t\t\t\t\t{posts.map((post, i) => (\n\t\t\t\t\t\t<li key={i}>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t<strong>{post.title}:</strong> {post.body}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<button onClick={() => onAddPost(post)}>Add as new post</button>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t)}\n\t\t</aside>\n\t);\n}\n\nfunction Footer() {\n\treturn <footer>&copy; by The Atomic Blog ✌️</footer>;\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}